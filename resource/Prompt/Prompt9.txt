要求に従い、Python でクラスファイルを作成せよ。

要求：
    制御工学のシミュレーションを行うクラスファイルを作成せよ。
    Python Control Systems Library を使え。
    クラスファイルの名前は、あなたが決めよ。
    クラスファイルにある関数は、一つの目的を行うようにせよ。
    一つの関数で複数のことを行うな。
    処理を細かく分割し、可読性を心がけよ。
    特殊な文字を使うな。
    実際に動作するコードをかけ。
    デバックのため、すべての変数をprintで表示させろ。
    以下の関数を実装せよ。
    関数：
    関数1：
    A = np.array([[-10, 1], [0, -15]])
    B = np.array([[0], [1]])
    C = np.array([[1, 0]])
    D = np.array([[0]])
    のようなアナログシステムのA,B,C,Dを入力し、アナログのシステムを構築する関数
    A,B,C,Dのサイズは、一般化し、さまざまな次数のシステムを扱えるようにせよ。
    関数2：
    print("Identified state-space matrices:")
    print("A_id:", A_id)
    print("B_id:", B_id)
    print("C_id:", C_id)
    print("D_id:", D_id)
    のようなデジタルシステムのA,B,C,Dとサンプリングレートを入力し、アナログに変換し、アナログのシステムを構築する関数
    A,B,C,Dのサイズは、一般化し、さまざまな次数のシステムを扱えるようにせよ。
    関数3：
    アナログシステムを入力し、インパルス応答の結果を入力の時系列データと出力の時系列データと時間データとサンプリングレートで返す関数。
    入力と出力の時系列データには、時間の情報を入力するな。
    1入力1出力とせよ。
    関数4：
    関数3で得た入力の時系列データと出力の時系列データと時間データとサンプリングレートを入力し、SRIMAlgorithmでシステム同定する関数
    from SRIMAlgorithm import SRIMAlgorithm
    を用いよ。
    """
    クラスの初期化
    n: システムの次数
    m: 出力の数
    r: 入力の数
    l: データの長さ
    Y: 出力データ行列 (m x l)
    U: 入力データ行列 (r x l)
    """
    で、
    srim = SRIMAlgorithm(n=2, m=1, r=1, l=len(t), Y=Y, U=U)
    A_id, B_id, C_id, D_id = srim.run()
    と同定せよ。
    関数2より、同定したシステムを構築し、同定したアナログシステムを出力せよ。
    関数5：
    もとのシステムと同定したシステムの二つのアナログシステムを入力し、ステップ応答のグラフを.pngファイルで保存する関数
    グラフには、入力ともとのシステムの応答と同定したシステムの応答を同一で描写せよ。
    グラフには、英語で表記せよ。
    関数6：
    もとのシステムと同定したシステムの二つのアナログシステムを入力し、行列Aの固有値を複素平面に描写し、.pngファイルで保存する関数
    グラフには、もとのシステムと同定したシステムを同一に描写せよ。
    グラフには、英語で表記せよ。
    関数7：
    もとのシステムと同定したシステムの二つのアナログシステムを入力し、ボード線図を.pngファイルで保存する関数
    ボード線図には、もとのシステムと同定したシステムを同一に描写せよ。
    グラフには、英語で表記せよ。
